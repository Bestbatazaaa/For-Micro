#include <LCD_I2C.h>
#include <WiFi.h>
#include <MQTT.h>

int count = 0;

//MQTT
const char ssid[] = "Please";
const char pass[] = "Best1234";

const char mqtt_broker[]="test.mosquitto.org";
const char mqtt_topic[]="Best/command";
const char mqtt_client_id[]="clientId-jlxlVIt1zj"; // must change this string to a unique value
int MQTT_PORT=1883;

WiFiClient net;
MQTTClient client;

unsigned long lastMillis = 0;

void connect() {
  Serial.print("checking wifi...");
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(1000);
  }

  Serial.print("\nconnecting...");
  while (!client.connect(mqtt_client_id)) {  
    Serial.print(".");
    delay(1000);
  }

  Serial.println("\nconnected!");

  client.subscribe(mqtt_topic);
  // client.unsubscribe("/hello");
}

void messageReceived(String &topic, String &payload) {
  if (topic == mqtt_topic) {
    if (payload == "ZERO") {
    count = 0;
    } else if (payload == "ONE") {
      count = 1;
    } else if (payload == "TWO"){
      count = 2;
    }
  }
}

//MQTT

LCD_I2C lcd(0x27, 16, 2);

#define MOTOR  26
#define LED1  2
#define LED2  16
#define BUTTON  32




void setup()
{
  Serial.begin(9600);
  WiFi.begin(ssid, pass);
  client.begin(mqtt_broker, MQTT_PORT, net);
  client.onMessage(messageReceived);


  pinMode(MOTOR, OUTPUT);
  pinMode(LED1, OUTPUT);
  pinMode(LED2, OUTPUT);
  pinMode(BUTTON, INPUT);
  lcd.begin();
  lcd.backlight();

  connect();
}



void loop()
{
  if (digitalRead(BUTTON)==LOW){
    count++;
    delay(250);
  }
  if (count ==  0){
  lcd.clear();
  digitalWrite(MOTOR, LOW);
  digitalWrite(LED1, LOW);
  digitalWrite(LED2, LOW);
  lcd.print(count);
  delay(250);   
  
  } else if (count == 1){
  lcd.clear();
  digitalWrite(MOTOR, LOW);
  digitalWrite(LED1, HIGH);
  digitalWrite(LED2, LOW);
  lcd.print(count);
  delay(250);
  } else if (count == 2){
  lcd.clear();
  digitalWrite(MOTOR, HIGH);
  digitalWrite(LED1, HIGH);
  digitalWrite(LED2, HIGH);
  lcd.print(count);
  delay(250);
  } else if (count > 2){
    count = 0;
  }

    if (!client.connected()) {
    connect();
  }
}
